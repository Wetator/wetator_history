<?xml version="1.0" encoding="UTF-8"?>
<project name="Wetator build" basedir=".">

  <property name="one-jar.dist.dir" value="./dist"/>
  <property name="one-jar.version" value="0.96"/>
  <taskdef name="one-jar" classname="com.simontuffs.onejar.ant.OneJarTask" onerror="report">
    <classpath id="one-jar-classpath">
      <fileset dir="./lib/ant" includes="**/one-jar-ant-task*.jar"/>
    </classpath>
  </taskdef>

  <taskdef name="buildupdate" classname="com.ryangrier.ant.BuildUpdate">
    <classpath id="buildupdate-classpath">
      <fileset dir="./lib/ant" includes="**/version_tool.jar"/>
    </classpath>
  </taskdef>

  <!-- make  environment variables of operation system available -->
  <property environment="env" />

  <!-- path to ant-dir -->
  <property name="ant" value="ant" />

  <!-- application specific properties -->
  <xmlproperty file="./build-properties.xml" keepRoot="false" semanticAttributes="true" />


  <!-- ******************************************* -->
  <!-- target info                                 -->
  <!-- ******************************************* -->
  <target name="info" description="Info Target">
    <echo level="info" message="" />
    <echo level="info" message="Project: ${ant.project.name}" />
    <echo level="info" message="  ${ant.version}" />
    <echo level="info" message="  Java version ${ant.java.version}" />
    <echo level="info" message="" />
  </target>


  <!-- ******************************************* -->
  <!-- target clean-compile                        -->
  <!-- ******************************************* -->
  <target name="clean-compile" description="recompiles all">

    <!-- clean build -->
    <delete dir="${dir.build}" includeEmptyDirs="true"/>
    <mkdir dir="${dir.build}"/>

    <mkdir dir="${dir.build}/classes"/>

    <!-- compile local classes -->
    <echo>Compiling with Java target ${javac.target}</echo>

    <javac srcdir="${dir.src}" encoding="iso-8859-1" debug="on" debuglevel="lines,vars,source"
      target="${javac.target}" destdir="${dir.build}/classes">
      <classpath>
        <fileset dir="${dir.lib}">
          <include name="**/*.jar"/>
        </fileset>
      </classpath>
    </javac>

    <!-- copy resources -->
    <copy todir="${dir.build}/classes" preservelastmodified="yes">
      <fileset dir="${dir.src}">
        <exclude name="**/*.java" />
      </fileset>
    </copy>
  </target>


  <!-- ******************************************* -->
  <!-- target compile-tests                        -->
  <!-- ******************************************* -->
  <target name="compile-tests">

    <!-- clean build -->
    <mkdir dir="${dir.build}/test-classes"/>

    <!-- compile local classes -->
    <echo>Compiling with Java target ${javac.target}</echo>

    <javac srcdir="${dir.test-src}" encoding="iso-8859-1" debug="on" debuglevel="lines,vars,source"
      target="${javac.target}" destdir="${dir.build}/test-classes">
      <classpath>
        <fileset dir="${dir.lib}">
          <include name="**/*.jar"/>
        </fileset>
        <path path="${dir.build}/classes" />
      </classpath>
    </javac>

    <!-- copy resources -->
    <copy todir="${dir.build}/test-classes" preservelastmodified="yes">
      <fileset dir="${dir.test-src}">
        <exclude name="**/*.java" />
      </fileset>
    </copy>
  </target>


  <!-- ******************************************* -->
  <!-- target build-release                        -->
  <!-- ******************************************* -->
  <target name="build-release" description="build all Wetator release artefacts" depends="clean-compile">
    <tstamp>
      <format property="timestamp" pattern="yyyy-MM-dd HH-mm-ss" />
    </tstamp>

    <buildupdate
      srcdir="${dir.src}"
      classname="org.rbri.wet.Version"
      variablename="BUILD"
      propertyName="application.buildnumber" />

    <delete file="${dir.build}/${application.jar-basename}.jar"/>
    <jar destfile="${dir.build}/${application.jar-basename}.jar">
      <fileset dir="${dir.build}/classes">
          <include name="**/*.*"/>
      </fileset>
      <manifest>
        <section name="Application">
          <attribute name="Application-Name" value="${application.name}"/>
          <attribute name="Vendor" value="${application.vendor}"/>
          <attribute name="Version" value="${application.version}"/>
          <attribute name="Build" value="${application.buildnumber}"/>
          <attribute name="Date" value="${timestamp}"/>
        </section>
        <section name="Build">
          <attribute name="Java-Runtime" value="${java.runtime.name}" />
          <attribute name="Java-Version" value="${java.runtime.version}" />
          <attribute name="Java-Target" value="${javac.target}" />
          <attribute name="OS-Name" value="${os.name}"/>
          <attribute name="OS-Version" value="${os.version}"/>
          <attribute name="Username" value="${env.USERNAME}"/>
        </section>
      </manifest>
    </jar>

    <delete file="${dir.build}/MANIFEST.MF"/>
    <manifest file="${dir.build}/MANIFEST.MF">
        <attribute name="Main-Class" value="com.simontuffs.onejar.Boot"/>
        <attribute name="One-Jar-Main-Class" value="org.rbri.wet.Wetator"/>
    </manifest>

    <!-- Construct the One-JAR file -->
    <delete file="${dir.build}/${application.jar-basename}_all.jar"/>
    <one-jar destfile="${dir.build}/${application.jar-basename}_all.jar" manifest="${dir.build}/MANIFEST.MF">
      <main>
            <fileset dir="${dir.build}/classes">
                <include name="**/*.*"/>
            </fileset>
        </main>
        <lib>
            <fileset dir="${dir.lib}">
                <include name="automaton/*.jar" />
                <include name="htmlunit/*.jar" />
                <include name="log4j/*.jar" />
                <include name="pdfbox/*.jar" />
                <include name="poi/*.jar" />
            </fileset>
        </lib>
    </one-jar>

    <echo file="${dir.build}/wetator.bat" append="false">@echo off

REM ----------------------------
REM Simple Wetator start script
REM ----------------------------


if "%JAVA_HOME%" == "" goto error

rem add the jdbc drivers if needed
rem SET JAVA_OPTS=%JAVA_OPTS% -Done-jar.class.path=ojdbc14.jar
rem SET JAVA_OPTS=%JAVA_OPTS% -Done-jar.class.path="db2jcc.jar|db2jcc_license_cu.jar"

rem start command for Wetator
set CMD="%JAVA_HOME%\bin\java" %JAVA_OPTS% -jar ${application.jar-basename}_all.jar %*

echo Starting Wetator

ECHO %CMD%
%CMD%


goto end

:error

echo ERROR: JAVA_HOME not found in your environment.
echo Please, set the JAVA_HOME variable in your environment to match the
echo location of the Java Virtual Machine you want to use.

:end
</echo>

    <mkdir dir="${dir.deploy}"/>

  	<!-- generate cmd-line distribution zip -->
    <zip destfile="${dir.deploy}/${application.jar-basename}_${application.version}.zip">
      <fileset dir="${dir.build}" >
        <include name="wetator.bat" />
        <include name="${application.jar-basename}_all.jar" />
      </fileset>

      <zipfileset dir="${dir.samples}" prefix="samples">
      	<include name="google_search/**" />
        <exclude name="google_search/logs/**" />
      </zipfileset>

      <zipfileset dir="${dir.xsl}" prefix="xsl">
        <exclude name="${dir.xsl}/ExceltestReport.xsl" />
      </zipfileset>

      <zipfileset dir="${dir.src}" prefix="templates">
        <include name="wetator.config" />
      </zipfileset>
    </zip>

  	<!-- generate ant distribution zip -->
    <zip destfile="${dir.deploy}/${application.jar-basename}_ant_${application.version}.zip">
      <zipfileset dir="${dir.build}" prefix="lib" >
        <include name="${application.jar-basename}.jar" />
      </zipfileset>

      <zipfileset dir="${dir.lib}/automaton" prefix="lib">
        <include name="*.jar" />
      </zipfileset>
      <zipfileset dir="${dir.lib}/htmlunit" prefix="lib">
        <include name="*.jar" />
      </zipfileset>
      <zipfileset dir="${dir.lib}/log4j" prefix="lib">
        <include name="*.jar" />
      </zipfileset>
      <zipfileset dir="${dir.lib}/pdfbox" prefix="lib">
        <include name="*.jar" />
      </zipfileset>
      <zipfileset dir="${dir.lib}/poi" prefix="lib">
        <include name="*.jar" />
      </zipfileset>

      <zipfileset dir="${dir.samples}/ant" prefix="templates">
      	<include name="build.xml" />
      </zipfileset>
    </zip>

  	<!-- generate src zip -->
    <zip destfile="${dir.deploy}/${application.jar-basename}_src_${application.version}.zip">
      <fileset dir="${dir.src}" >
        <exclude name="**/jdoc/**" />
        <exclude name="**/*.jpage*" />
      </fileset>
    </zip>

  	<!-- generate web zip -->
    <zip destfile="${dir.deploy}/${application.jar-basename}_web_${application.version}.zip">
      <zipfileset dir="${dir.webpages}" >
      </zipfileset>

      <zipfileset dir="${dir.deploy}" prefix="download">
        <exclude name="${application.jar-basename}_web_${application.version}.zip" />
      </zipfileset>
      <zipfileset dir="${dir.test-wet-src}" prefix="exceltests">
      </zipfileset>
    </zip>

  </target>

</project>